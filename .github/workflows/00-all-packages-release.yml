name: '00 - all packages release'

on:
  workflow_dispatch:

jobs:
  trigger-all-releases:
    name: Trigger di Rilascio Globale
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read # Necessario per gh run list

    steps:
      - name: Checkout del codice del repository
        uses: actions/checkout@v4

      - name: Avvia i workflow di pubblicazione in sequenza
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Inizio a chiamare i singoli workflow in modo sequenziale..."
          echo "Tutti i rilasci verranno eseguiti usando il codice dal branch 'master'."

          # Lista dei workflow da eseguire in ordine
          WORKFLOWS=(
            "00-publish-debian-deb.yml"
            "01-publish-fedora-rpm.yml"
            "02-publish-opensuse-rpm.yml"
            "03-publish-enterprise-linux.yml"
            "04-publish-archlinux.yml"
            "05-publish-manjaro.yml"
            "06-publish-alpine.yml"
          )

          for workflow_file in "${WORKFLOWS[@]}"; do
            echo "------------------------------------------------------"
            echo "üöÄ Avvio del workflow: ${workflow_file}"
            gh workflow run "${workflow_file}" --ref master

            # Attende un istante per dare tempo a GitHub di registrare l'esecuzione.
            sleep 5 

            # Recupera l'ID dell'ultima esecuzione avviata per quel workflow sul branch master.
            echo "üîç Recupero l'ID dell'esecuzione..."
            RUN_ID=$(gh run list --workflow="${workflow_file}" --branch="master" --limit=1 --json databaseId -q '.[0].databaseId')

            if [ -z "$RUN_ID" ]; then
              echo "‚ùå Impossibile trovare l'ID dell'esecuzione per ${workflow_file}. Annullamento."
              exit 1
            fi
            
            echo "‚è≥ Attendo il completamento dell'esecuzione con ID: ${RUN_ID}..."
            
            # Si mette in ascolto e attende che la run termini. 
            # Il comando esce con un codice di errore se la run fallisce.
            gh run watch "${RUN_ID}" --exit-status
            
            echo "‚úÖ Workflow ${workflow_file} completato con successo."

            echo "‚è± Aggiungo un ritardo di 60 secondi per permettere al repository di destinazione di aggiornarsi..."
            sleep 60
          done

          echo "------------------------------------------------------"
          echo "üéâ Processo completato. Tutti i workflow sono stati eseguiti in sequenza."

